name: Reusable deployment workflow

on:
    workflow_call:
        inputs:
            target-env:
                required: true
                type: string

jobs:
    deploy:
        name: Deploy to ${{ inputs.target-env }}
        permissions:
            id-token: write
            contents: read
        runs-on: ubuntu-latest
        outputs:
            latest_commit: ${{ steps.git_remote.outputs.latest_commit }}
        environment:
            name: ${{ inputs.target-env }}
        env:
            ENVIRONMENT: ${{ inputs.target-env }}
        steps:
            - name: Echo environment
              run: echo "ðŸŽ‰ target environment $ENVIRONMENT"
            - name: Get Github release
              id: get-release
              run: |
                  RELEASE_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest"
                  RELEASE_JSON=`curl -H 'Accept: application/vnd.github+json' -H 'X-GitHub-Api-Version: 2022-11-28' -H 'Authorization: Bearer ${{ github.token }}' -s $RELEASE_URL`
                  VERSION=`echo $RELEASE_JSON | jq '.tag_name' | tr -d '"' | sed -e "s/^v//"`
                  echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
                  echo "Version: $VERSION"
                  TARBALL_URL=`echo $RELEASE_JSON | jq '.tarball_url' | tr -d '"'`
                  echo "TARBALL_URL=$TARBALL_URL" >> $GITHUB_OUTPUT
                  echo "Tarball URL: $TARBALL_URL"
            - name: Download tarball
              id: download-tarball
              env:
                  VERSION: ${{ steps.get-release.outputs.VERSION }}
                  TARBALL_URL: ${{ steps.get-release.outputs.TARBALL_URL }}
              run: |
                  OUTPUT_FILE="${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}.${VERSION}.tar.gz"
                  echo "Output file: $OUTPUT_FILE"
                  echo "OUTPUT_FILE=$OUTPUT_FILE" >> $GITHUB_OUTPUT
                  curl -H 'Accept: application/vnd.github+json' -H 'X-GitHub-Api-Version: 2022-11-28' -H 'Authorization: Bearer {{ github.token }}' -L $TARBALL_URL -o $OUTPUT_FILE
            - name: Extract tarball and enter dir
              env:
                  OUTPUT_FILE: ${{ steps.download-tarball.outputs.OUTPUT_FILE }}
              run: |
                  tar -xfz $OUTPUT_FILE
                  ls -l

            # - name: Assume role using OIDC
            #   uses: aws-actions/configure-aws-credentials@master
            #   with:
            #       role-to-assume: arn:aws:iam::075487384540:role/SSMDeployer-OIDCStack-DeployRole885297C3-F1O3UKF3OLJY
            #       aws-region: ap-southeast-2
            # - name: Install NodeJS and Yarn
            #   uses: actions/setup-node@v2
            #   with:
            #       node-version: '18'
            # - name: Install package dependencies
            #   run: yarn install
            # - name: Deploy CDK
            #   run: yarn cdk-deploy-$ENVIRONMENT
